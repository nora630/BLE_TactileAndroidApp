package com.onodera.BleApp.template;

public class LowPassFilter {
    private int[] in1 = new int[60];
    private float[] h = {
            3.11284E-19f,
            0.000279382f,
            0.000600634f,
            0.000975961f,
            0.00139198f,
            0.001799971f,
            0.002113379f,
            0.002214556f,
            0.001971122f,
            0.001260575f,
            -1.20622E-18f,
            -0.001823632f,
            -0.004127844f,
            -0.006718922f,
            -0.009290379f,
            -0.011438204f,
            -0.012693235f,
            -0.012568413f,
            -0.010616253f,
            -0.006489907f,
            2.9961E-18f,
            0.008840657f,
            0.019791444f,
            0.032382323f,
            0.045938376f,
            0.059629371f,
            0.072539968f,
            0.083753367f,
            0.09243924f,
            0.097935903f,
            0.099817161f,
            0.097935903f,
            0.09243924f,
            0.083753367f,
            0.072539968f,
            0.059629371f,
            0.045938376f,
            0.032382323f,
            0.019791444f,
            0.008840657f,
            2.9961E-18f,
            -0.006489907f,
            -0.010616253f,
            -0.012568413f,
            -0.012693235f,
            -0.011438204f,
            -0.009290379f,
            -0.006718922f,
            -0.004127844f,
            -0.001823632f,
            -1.20622E-18f,
            0.001260575f,
            0.001971122f,
            0.002214556f,
            0.002113379f,
            0.001799971f,
            0.00139198f,
            0.000975961f,
            0.000600634f,
            0.000279382f,
            3.11284E-19f,

    };

    public  int firFilter(int input) {
        float output = 0;
        for (int i=0; i<h.length; i++){
            if(i==0) output += h[i] * input;
            else output += h[i] * in1[h.length-1-i];
        }
        int tmp1 = 0, tmp2 = 0;
        for (int i=0; i<h.length-1; i++){
            if(i==0){
                tmp1 = in1[h.length-2];
                in1[h.length-2] = input;
            } else {
                tmp2 = in1[h.length-2-i];
                in1[h.length-2-i] = tmp1;
                tmp1 = tmp2;
            }
        }
        return (int)output;
    }
}
